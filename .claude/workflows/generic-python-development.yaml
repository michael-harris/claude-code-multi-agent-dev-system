name: generic-python-development
description: Non-backend Python development (utilities, scripts, CLI tools, algorithms)
trigger: internal
called_by: task-orchestrator

parameters:
  - name: task
    type: object
    required: true
  - name: iteration
    type: integer
    default: 1
  - name: tier
    type: string
    default: "t1"
  - name: previous_gaps
    type: array
    default: []

steps:
  - name: implement
    agent: python-developer-generic-{tier}
    action: implement_code
    input:
      task: "{task}"
      requirements: "{task.technical_requirements}"
    output: "src/utils/" or "src/scripts/" or "src/cli/" or "src/lib/"
    
    tier_selection:
      iteration_1: t1
      iteration_2: t1
      iteration_3_plus: t2

  - name: test
    agent: test-writer
    action: write_python_tests
    input:
      code: "{implementation_output}"
      task: "{task}"
    output: "tests/"

  - name: security_audit
    agent: security-auditor
    action: audit_python
    input:
      code: "{implementation_output}"
      task: "{task}"
    output: "docs/security/{task.id}-audit.md"

  - name: documentation
    agent: documentation-coordinator
    action: document_python
    input:
      code: "{implementation_output}"
      task: "{task}"
    output: "docs/python/"

output:
  artifacts:
    python_implementation: "src/"
    tests: "tests/"
    security_audit: "docs/security/"
    documentation: "docs/python/"
  
  metrics:
    tier_used: "{tier}"
